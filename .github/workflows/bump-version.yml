name: Bump Version

on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
      custom-version:
        description: 'Custom version (optional, overrides version-type)'
        required: false
        type: string

permissions:
  contents: write

jobs:
  bump-version:
    name: Bump Version and Create Tag
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Read current version
        id: current-version
        run: |
          CURRENT_VERSION=$(cat VERSION | tr -d '\n' | tr -d ' ')
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Calculate new version
        id: new-version
        run: |
          CURRENT_VERSION="${{ steps.current-version.outputs.current }}"
          CUSTOM_VERSION="${{ inputs.custom-version }}"
          VERSION_TYPE="${{ inputs.version-type }}"
          
          # If custom version provided, use it
          if [ -n "$CUSTOM_VERSION" ]; then
            NEW_VERSION="$CUSTOM_VERSION"
            echo "Using custom version: $NEW_VERSION"
          else
            # Parse current version
            IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
            
            # Bump version based on type
            case $VERSION_TYPE in
              major)
                MAJOR=$((MAJOR + 1))
                MINOR=0
                PATCH=0
                ;;
              minor)
                MINOR=$((MINOR + 1))
                PATCH=0
                ;;
              patch)
                PATCH=$((PATCH + 1))
                ;;
            esac
            
            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
            echo "Calculated $VERSION_TYPE bump: $NEW_VERSION"
          fi
          
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Update VERSION file
        run: |
          NEW_VERSION="${{ steps.new-version.outputs.version }}"
          echo "$NEW_VERSION" > VERSION
          cat VERSION

      - name: Commit VERSION change
        run: |
          NEW_VERSION="${{ steps.new-version.outputs.version }}"
          git add VERSION
          git commit -m "Bump version to $NEW_VERSION"
          git push origin master

      - name: Create and push tag
        run: |
          NEW_VERSION="${{ steps.new-version.outputs.version }}"
          git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
          git push origin "v$NEW_VERSION"
          echo "✅ Created and pushed tag v$NEW_VERSION"

      - name: Summary
        run: |
          echo "## Version Bump Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Previous Version:** ${{ steps.current-version.outputs.current }}" >> $GITHUB_STEP_SUMMARY
          echo "- **New Version:** ${{ steps.new-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Bump Type:** ${{ inputs.version-type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag Created:** v${{ steps.new-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Version bumped successfully!" >> $GITHUB_STEP_SUMMARY
